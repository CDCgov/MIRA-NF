# Create an argument to pull a particular version of an image
ARG python_image
ARG python_image=${python_image:-python:3.10-alpine}

####################################################################################################
# BASE IMAGE
####################################################################################################
FROM ${python_image} AS base

# Create environment variable to get specific version of fastqc
ARG python_version
ENV python_version=${python_version:-python3.10}

# Required certs for apk update
COPY ca.crt /root/ca.crt

# Put certs in /etc/ssl/certs location
RUN cat /root/ca.crt >> /etc/ssl/certs/ca-certificates.crt

# Install system libraries of general use
RUN apk update && apk add --no-cache \
    openjdk21-jre \
    musl \
    wget \
    bash \
    nano \
    vim \
    tar \
    curl \
    dos2unix \
    && pip install --upgrade pip

# Set up project directory
ENV PROJECT_DIR=/nextclade

############# Install nextclade ##################
# Copy all files to docker images
COPY . ${PROJECT_DIR}

#Pull nextclade from the internet
RUN curl -L https://github.com/nextstrain/nextclade/releases/latest/download/nextclade-x86_64-unknown-linux-musl --cacert /root/ca.crt -o ${PROJECT_DIR}/nextclade && chmod +x ${PROJECT_DIR}/nextclade

############# Fix vulnerablities pkgs ##################

# Copy all files to docker images
COPY fixed_nextclade_vulnerability_pkgs.txt ${PROJECT_DIR}/fixed_vulnerability_pkgs.txt

# Copy all files to docker images
COPY fixed_nextclade_vulnerability_pkgs.sh ${PROJECT_DIR}/fixed_vulnerability_pkgs.sh

# Convert bash script from Windows style line endings to Unix-like control characters
RUN dos2unix ${PROJECT_DIR}/fixed_vulnerability_pkgs.sh

# Allow permission to excute the bash script
RUN chmod a+x ${PROJECT_DIR}/fixed_vulnerability_pkgs.sh

# Execute bash script to wget the file and tar the package
RUN bash ${PROJECT_DIR}/fixed_vulnerability_pkgs.sh

############# Set up working directory ##################

# Create working directory variable
ENV WORKDIR=/data

# Set up volume directory in docker
VOLUME ${WORKDIR}

# Set up working directory in docker
WORKDIR ${WORKDIR}

# Export project directory to PATH
ENV PATH="$PATH:${PROJECT_DIR}"